% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rDNA.R
\name{dna_plotHeatmap}
\alias{dna_plotHeatmap}
\title{Plots a heatmap from dna_cluster objects}
\usage{
dna_plotHeatmap(clust, truncate = 40, values = FALSE,
  colours = character(), custom_colours = character(), square = TRUE,
  qualifierLevels = list(`0` = "no", `1` = "yes"), ...)
}
\arguments{
\item{clust}{A \code{dna_cluster} object created by the \link{dna_cluster}
function.}

\item{truncate}{Sets the number of characters to which labels should be
truncated.}

\item{values}{Should values displayed in the tiles of the heatmap? Logical.}

\item{colours}{There are two options: When "brewer" is selected, the function
\link[ggplot2]{scale_fill_distiller} is used to colour the heatmap tiles.
When "gradient" is selected, \link[ggplot2]{scale_fill_gradient} will be
used. The colour palette and low/high values can be supplied using the
argument \code{custom_colours}}

\item{custom_colours}{For \code{colours = "brewer"} you can use either a
string with a palette name or the index number of a brewer palette (see
details). If \code{colours = "gradient"} you need to supply at least two
values. Colours are then derived from a sequential colour gradient palette.
\link[ggplot2]{scale_fill_gradient}. If more than two colours are provided
\link[ggplot2]{scale_fill_gradientn} is used instead.}

\item{square}{If TRUE, will make the tiles of the heatmap quadratic.}

\item{qualifierLevels}{Takes a list with integer values of the qulifier
levels (as characters) as names and character values as labels (See
example).}

\item{...}{Currently not used.}
}
\description{
Plots a heatmap with dendrograms from objects derived via \link{dna_cluster}.
}
\details{
This function plots a heatmap including dendrograms on the x- and y- axis of
the heatmap plot. The available options for colouring the tiles can be
displayed using \code{RColorBrewer::display.brewer.all()} (RColorBrewer needs
to be installed).
}
\examples{
\dontrun{
dna_init("dna-2.0-beta20.jar")
conn <- dna_connection(dna_sample())
clust <- dna_cluster(conn)
dend <- dna_plotHeatmap(clust,
                        qualifierLevels = list("0" = "no",
                                               "1" = "yes"))
}
}
\author{
Johannes B. Gruber
}
